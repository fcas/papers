@article{Dings??yr2012,
abstract = {Ever since the agile manifesto was created in 2001, the research community has devoted a great deal of attention to agile software development. This article examines publications and citations to illustrate how the research on agile has progressed in the 10 years following the articulation of the manifesto. Specifically, we delineate the conceptual structure underlying agile scholarship by performing an analysis of authors who have made notable contributions to the field. Further, we summarize prior research and introduce contributions in this special issue on agile software development. We conclude by discussing directions for future research and urging agile researchers to embrace a theory-based approach in their scholarship. ?? 2012 Elsevier Inc. All rights reserved.},
author = {Dings??yr, Torgeir and Nerur, Sridhar and Balijepally, Venugopal and Moe, Nils Brede},
doi = {10.1016/j.jss.2012.02.033},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/research/A decade of agile methodologies- Towards explaining agile software development.pdf:pdf},
isbn = {0164-1212},
issn = {01641212},
journal = {J. Syst. Softw.},
keywords = {Agile software development,Crystal method,Feature-driven development,Information systems,Lean software development,Scrum,Software engineering,Theory,eXtreme programming, XP},
number = {6},
pages = {1213--1221},
title = {{A decade of agile methodologies: Towards explaining agile software development}},
volume = {85},
year = {2012}
}
@article{Inayat2015,
abstract = {Unlike traditional software development methods, agile methods are marked by extensive collaboration, i.e. face-to-face communication. Although claimed to be beneficial, the software development community as a whole is still unfamiliar with the role of the requirements engineering practices in agile methods. The term "agile requirements engineering" is used to define the "agile way" of planning, executing and reasoning about requirements engineering activities. Moreover, not much is known about the challenges posed by collaboration-oriented agile way of dealing with requirements engineering activities. Our goal is to map the evidence available about requirements engineering practices adopted and challenges faced by agile teams in order to understand how traditional requirements engineering issues are resolved using agile requirements engineering. We conducted a systematic review of literature published between 2002 and June 2013 and identified 21 papers, that discuss agile requirements engineering. We formulated and applied specific inclusion and exclusion criteria in two distinct rounds to determine the most relevant studies for our research goal. The review identified 17 practices of agile requirements engineering, five challenges traceable to traditional requirements engineering that were overcome by agile requirements engineering, and eight challenges posed by the practice of agile requirements engineering. However, our findings suggest that agile requirements engineering as a research context needs additional attention and more empirical results are required to better understand the impact of agile requirements engineering practices e.g. dealing with non-functional requirements and self-organising teams.},
archivePrefix = {arXiv},
arxivId = {1512.00567},
author = {Inayat, Irum and Salim, Siti Salwah and Marczak, Sabrina and Daneva, Maya and Shamshirband, Shahaboddin},
doi = {10.1016/j.chb.2014.10.046},
eprint = {1512.00567},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/out/slr/A systematic literature review on agile requirements engineering practices and challenges.pdf:pdf},
isbn = {0747-5632},
issn = {07475632},
journal = {Comput. Human Behav.},
keywords = {Agile requirements engineering,Agile software development methods,Collaboration,Systematic review,Traditional requirements engineering},
pages = {915--929},
publisher = {Elsevier Ltd},
title = {{A systematic literature review on agile requirements engineering practices and challenges}},
volume = {51},
year = {2015}
}
@article{Hilt2016,
abstract = {Abstract Curtailing development periods in the automotive industry require concurrent predevelopment of new products and production technologies. Volatile requirements and complex interdependencies are the main challenges which agile methods originating from software development are designed for. To examine transferability of several agile methods to the predevelopment of hardware, the authors first theoretically analysed existing methods regarding their potential. While adopting the most promising methods, a case study regarding the production technology for electrical energy storage systems was conducted. It showed that many agile aspects and tools are easily adoptable and help developers in the early stage depending on group size and complexity. They contribute by ensuring that complexity remains manageable, encouraging close teamwork, improving information circulation and supporting transparency. Thus agile methods supplement concurrent predevelopment.},
author = {Hilt, Martin J. and Wagner, Daniel and Osterlehner, Veronika and Kampker, Achim},
doi = {10.1016/j.procir.2016.04.189},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/out/Agile predevelopment of production technologies for electric energy storage systems– a case study in the automotive industry.pdf:pdf},
issn = {22128271},
journal = {Procedia CIRP},
keywords = {a gile methods,e-mobility,hardware scrum,predevelopment,product generation development,production technology,technology transfer},
pages = {88--93},
publisher = {The Author(s)},
title = {{Agile Predevelopment of Production Technologies for Electric Energy Storage Systems – A Case Study in the Automotive Industry}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S221282711630573X},
volume = {50},
year = {2016}
}
@article{Torrecilla-Salinas2016,
abstract = {Context Agile approaches are an alternative for organizations developing software, particularly for those who develop Web applications. Besides, CMMI (Capability Maturity Model Integration) models are well-established approaches focused on assessing the maturity of an organization that develops software. Web Engineering is the field of Software Engineering responsible for analyzing and studying the specific characteristics of the Web. The suitability of an Agile approach to help organizations reach a certain CMMI maturity level in Web environments will be very interesting, as they will be able to keep the ability to quickly react and adapt to changes as long as their development processes get mature. Objective This paper responds to whether it is feasible or not, for an organization developing Web systems, to achieve a certain maturity level of the CMMI-DEV model using Agile methods. Method The proposal is analyzed by means of a systematic literature review of the relevant approaches in the field, defining a characterization schema in order to compare them to introduce the current state-of-the-art. Results The results achieved after the systematic literature review are presented, analyzed and compared against the defined schema, extracting relevant conclusions for the different dimensions of the problem: compatibility, compliance, experience, maturity and Web. Conclusion It is concluded that although the definition of an Agile approach to meet the different CMMI maturity levels goals could be possible for an organization developing Web systems, there is still a lack of detailed studies and analysis on the field.},
author = {Torrecilla-Salinas, C. J. and Sede??o, J. and Escalona, M. J. and Mej??as, M.},
doi = {10.1016/j.infsof.2015.11.002},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/out/slr/Agile, Web Engineering and Capability Maturity Model Integration- A systematic literature review.pdf:pdf},
isbn = {0950-5849},
issn = {09505849},
journal = {Inf. Softw. Technol.},
keywords = {Agile,CMMI,Scrum,Software Engineering,Web Engineering},
pages = {92--107},
title = {{Agile, Web Engineering and Capability Maturity Model Integration: A systematic literature review}},
volume = {71},
year = {2016}
}
@article{Shrivastava2015,
abstract = {Context: Organizations combine agile approach and Distributed Software Development (DSD) in order to develop better quality software solutions in lesser time and cost. It helps to reap the benefits of both agile and distributed development but pose significant challenges and risks. Relatively scanty evidence of research on the risks prevailing in distributed agile development (DAD) has motivated this study. Objective: This paper aims at creating a comprehensive set of risk factors that affect the performance of distributed agile development projects and identifies the risk management methods which are frequently used in practice for controlling those risks. Method: The study is an exploration of practitioners' experience using constant comparison method for analyzing in-depth interviews of thirteen practitioners and work documents of twenty-eight projects from thirteen different information technology (IT) organizations. The field experience was supported by extensive research literature on risk management in traditional, agile and distributed development. Results: Analysis of qualitative data from interviews and project work documents resulted into categorization of forty-five DAD risk factors grouped under five core risk categories. The risk categories were mapped to Leavitt's model of organizational change for facilitating the implementation of results in real world. The risk factors could be attributed to the conflicting properties of DSD and agile development. Besides that, some new risk factors have been experienced by practitioners and need further exploration as their understanding will help the practitioners to act on time. Conclusion: Organizations are adopting DAD for developing solutions that caters to the changing business needs, while utilizing the global talent. Conflicting properties of DSD and agile approach pose several risks for DAD. This study gives a comprehensive categorization of the risks faced by the practitioners in managing DAD projects and presents frequently used methods to reduce their impact. The work fills the yawning research void in this field.},
author = {Shrivastava, Suprika V. and Rathod, Urvashi},
doi = {10.1016/j.infsof.2014.07.007},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/distributed agile development/Categorization of risk factors for distributed agile projects.pdf:pdf},
isbn = {09505849},
issn = {09505849},
journal = {Inf. Softw. Technol.},
keywords = {Agile software development (ASD),Distributed Agile Development (DAD),Distributed Software Development (DSD),Leavitt's' model,Risk factor classification,Risk management in distributed agile development},
pages = {373--387},
pmid = {1628651847},
publisher = {Elsevier B.V.},
title = {{Categorization of risk factors for distributed agile projects}},
url = {http://dx.doi.org/10.1016/j.infsof.2014.07.007},
volume = {58},
year = {2015}
}
@article{Garousi2016,
abstract = {Context Understanding the types of software engineering practices and techniques used in the industry is important. There is a wide spectrum in terms of the types and maturity of software engineering practices conducted in each software team and company. Furthermore, it is important to understand the cross-factor relationship of software engineering practices and practitioner demographics including their companies and projects, e.g., is it the case that practitioners developing software for sectors such as military would utilize software size measurement approaches more, or use different software development methodologies, compared to practitioners developing software for other sectors?, and what kinds of practices are conducted by practitioners in small versus large companies? Objective Our objective is to get an understanding into the cross-factor correlation of various software engineering practices versus practitioner demographics including their companies and projects (e.g., target industry, size and work experience). Such an understanding will enable us to identify patterns and pinpoint special issues which should be studied and addressed in the context of each specific demographic (e.g., small versus large companies). Thus, we decided to conduct an exploratory study in this area and collected real industrial data in the context of Turkey which has a vibrant software industry. Method To achieve the above objective, we use the data from a recent Turkish-wide survey of software engineering practices which was systematically designed with 46 questions based on our past experience in the Canadian context and using the Software Engineering Body of Knowledge (SWEBOK). 202 practicing software engineers participated in the survey. We raise a set of 12 research questions about the cross-factor correlation of software engineering practices and practitioner demographics, and address them using statistical analysis. Results The exploratory study results reveal important and interesting findings about cross-factor relationship of software engineering practices and practitioner demographics. Among some of the most interesting findings are the followings: (1) By analyzing the trends, we were first surprised to see that as a practitioner gets more years of work experience, against what one would expect, s/he experiences more challenges in Software Development Life-Cycle (SDLC) phases and SE tasks; (2) Almost 55{\%} of participants measure software size; (3) Agile/lean development is used the least (16{\%}) by the participants working in the companies serving the military and defense sector; (4) Usage of waterfall is low among participants employed by small-sized companies whereas Agile/lean development is relatively popular among this class of participants; and (5) As company size increases, usage of spiral development slightly increases, whereas usage of extreme programming practices decreases. Conclusion The results of this exploratory study will be useful to software engineering professionals and researchers both in Turkey and world-wide by revealing the cross-factor relationship of software engineering practices versus practitioner demographics. The study raises several new research directions, e.g., (1) Why are not many practitioners using any size nor project estimation metrics and how these fundamental engineering approaches could be utilized more frequently?, (2) What are the best practices, success stories and challenging experiences in using SE tools?, and (3) Why is Agile/lean development is not popular in the military and defense sector and how these approaches could be utilized more frequently.},
author = {Garousi, Vahid and Co??kun??ay, Ahmet and Demir??rs, Onur and Yazici, Ali},
doi = {10.1016/j.jss.2015.09.013},
file = {:Users/felipealvesdias/Library/Application Support/Mendeley Desktop/Downloaded/Garousi et al. - 2016 - Cross-factor analysis of software engineering practices versus practitioner demographics An exploratory study in.pdf:pdf},
issn = {01641212},
journal = {J. Syst. Softw.},
keywords = {Cross-factor analysis,Practitioner demographics,Software engineering practices},
pages = {49--73},
title = {{Cross-factor analysis of software engineering practices versus practitioner demographics: An exploratory study in Turkey}},
volume = {111},
year = {2016}
}
@article{Dingsøyr2016,
abstract = {The relationship between customers and suppliers remains a challenge in agile software development. Two trends seek to improve this relationship, the increased focus on value and the move towards continuous deployment. In this special section on continuous value delivery, we describe these emerging research themes and show the increasing interest in these topics over time. Further, we discuss implications for future research.},
author = {Dings{\o}yr, Torgeir and Lassenius, Casper},
doi = {10.1016/j.infsof.2016.04.018},
file = {:Users/felipealvesdias/Downloads/revisao - gestao/elsevier{\_}9/Emerging themes in agile software development Introduction to the special section on continuous value delivery.pdf:pdf},
issn = {09505849},
journal = {Inf. Softw. Technol.},
keywords = {Agile software development,Continuous deployment,Extreme programming,Lean startup,Requirements engineering,Scrum,Software process improvement,Value-based software engineering},
pages = {56--60},
title = {{Emerging themes in agile software development: Introduction to the special section on continuous value delivery}},
volume = {77},
year = {2016}
}
@article{Spundak2014,
abstract = {Project management methodology is usually defined as a set of methods, techniques, procedures, rules, templates, and best practices used on a project. It is commonly based on a specific project management approach, that defines a set of principles and guidelines which define the way a project is managed. With the growing trend of usage of agile project management on different projects, it is clear that two opposite sides exist – traditional and agile project management approach, and that there exists a need to combine both approaches. So, the question is if it is and how it is possible to combine both approaches in a single project management methodology? The paper covers thorough literature review and starts with the definition of the project management approach and of the project management methodology. It provides overview of different project management approaches and defines project management methodologies. The literature review shows what is considered as part of project management methodology in a wider or narrower sense, and what the main characteristics of a methodology are. The need for combining project management approaches is shown on the case of software development project. The paper provides basis for further research on application of different project management approaches and methodologies. Further research could build on an idea of creating unique methodology for project, based on different project management approaches. In that way it is possible to create project management methodologies that have high possibility of customization to projects and to project environments.},
author = {{\v{S}}pundak, Mario},
doi = {10.1016/j.sbspro.2014.03.105},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/methodologies/Mixed Agile$\backslash$:Traditional Project Management Methodology – Reality or Illusion?.pdf:pdf},
isbn = {1877-0428},
issn = {18770428},
journal = {Procedia - Soc. Behav. Sci.},
keywords = {1877-0428,2014 the authors,385 1 4913 180,Agile project management,traditional project manag,agile project management,by-nc-nd license,com,corresponding author,e-mail address,gmail,mario,methodology,methodology elements,open access under cc,published by elsevier ltd,spundak,tel,traditional project management},
pages = {939--948},
publisher = {Elsevier B.V.},
title = {{Mixed Agile/Traditional Project Management Methodology – Reality or Illusion?}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S187704281402196X},
volume = {119},
year = {2014}
}
@article{Nurdiani2016,
abstract = {The growing interest in Agile and Lean software development is reflected in the increasing number of secondary studies on the benefits and limitations of Agile and Lean processes and practices. The aim of this tertiary study is to consolidate empirical evidence regarding Agile and Lean practices and their respective impacts on project constraints as defined in the Project Management Body of Knowledge (PMBOK): scope, quality, schedule, budget, resources, communication, and risk. In this tertiary study, 13 secondary studies were included for detailed analysis. Given the heterogeneity of the data, we were unable to perform a rigorous synthesis. Instead, we mapped the identified Agile and Lean practices, and their impacts on the project constraints described in PMBOK. From 13 secondary studies, we identified 13 Agile and Lean practices. Test-Driven Development (TDD) is studied in ten secondary studies, meanwhile other practices are studied in only one or two secondary studies. This tertiary study provides a consolidated view of the impacts of Agile and Lean practices. The result of this tertiary study indicates that TDD has a positive impact on external quality. However, due to insufficient data or contradictory results, we were unable to make inferences on other Agile and Lean practices. Implications for research and practice are further discussed in the paper.},
author = {Nurdiani, Indira and B??rstler, J??rgen and Fricker, Samuel A.},
doi = {10.1016/j.jss.2016.06.043},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/managing/The impacts of agile and lean practices on project constraints- A tertiary study.pdf:pdf},
isbn = {0164-1212},
issn = {01641212},
journal = {J. Syst. Softw.},
keywords = {Agile software development,Lean software development,Project constraints,Tertiary study},
pages = {162--183},
publisher = {Elsevier Inc.},
title = {{The impacts of agile and lean practices on project constraints: A tertiary study}},
url = {http://dx.doi.org/10.1016/j.jss.2016.06.043},
volume = {119},
year = {2016}
}
@article{Holt2015,
abstract = {Database management has an important role to play in the management of data assets which are at the heart of every organization. In a fast moving technological era, where data is rapidly expanding, understanding the current best practices and procedures is important for continuous improvement. This paper investigates how databases are actually administered and identifies what practices and procedures are utilized throughout the database lifecycle. The paper highlights the demographics of people who manage database systems and the diverse requirements of database systems given the wide range of software and hardware available. The results of this paper show the breadth of issues relevant to database management. The paper concludes by showing where existing practice and procedures are not optimal, and by highlighting the complexities in the field.},
author = {Holt, Victoria and Ramage, Magnus and Kear, Karen and Heap, Nick},
doi = {10.1016/j.is.2014.12.004},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/Elsevier{\_}10/out/The usage of best practices and procedures in the database community.pdf:pdf},
issn = {03064379},
journal = {Inf. Syst.},
keywords = {Best practice and procedures,Data management,Database administration,Database lifecycle,Database management,Database operations},
pages = {163--181},
publisher = {Elsevier},
title = {{The usage of best practices and procedures in the database community}},
url = {http://dx.doi.org/10.1016/j.is.2014.12.004},
volume = {49},
year = {2015}
}
