@article{Rodriguez2012,
abstract = {Earlier empirical studies have demonstrated the interest that agile methods have generated in the software industry. Currently, lean approaches are increasingly adopted for complementing agile methods in software processes. With the goal of providing up-to-day results that can be used by organizations implementing or planning to implement agile and/or lean methods, we have conducted a study on the current stage of agile and lean adoption and usage in the software industry. For this purpose, we conducted an extensive survey among Finnish software practitioners in 2011, using the membership registry of The Finnish Information Processing Association (FIPA)as a sampling frame. 408 responses were collected from 200 software intensive organizations in the study. The survey included questions for identifying the rate of agile and lean usage in software organizations as well as the implementation of specific methods and practices, goals in adopting agile and lean, reasons for not applying these methods and effects of the agile and lean usage. The results of the survey reveal that a majority of respondents' organizational units are using agile and/or lean methods (58{\%}). Furthermore, lean appears as a new player, being used by 24{\%} of respondents, mainly in combination with agile (21{\%}). The reasons and benefits for using agile and lean methods appeared to correspond in most parts to the findings of the earlier research. Generally, the experiences of using agile and lean methods seem to be rather positive, although challenges, such as obtaining management support and limitations for scaling agile in distributed settings, were also identified.},
author = {Rodr{\'{i}}guez, Pilar and Markkula, Jouni and Oivo, Markku and Turula, Kimmo},
doi = {10.1145/2372251.2372275},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/interviews and surveys/ Survey on agile and lean usage in finnish software industry.pdf:pdf},
isbn = {9781450310567},
issn = {1938-6451},
journal = {Proc. ACM-IEEE Int. Symp. Empir. Softw. Eng. Meas. - ESEM '12},
keywords = {agile,lean,survey},
pages = {139},
title = {{Survey on agile and lean usage in finnish software industry}},
url = {http://dl.acm.org/citation.cfm?doid=2372251.2372275},
year = {2012}
}
@article{Tuli2014,
author = {Tuli, Anupriya and Hasteer, Nitasha and Sharma, Megha and Bansal, Abhay},
doi = {10.1145/2632434.2632447},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/methodologies/Empirical investigation of agile software development- cloud perspective.pdf:pdf},
issn = {01635948},
journal = {ACM SIGSOFT Softw. Eng. Notes},
keywords = {2,agile methods,cloud computing,extreme programming,literature review,scrum,sdlc,software development life cycle,xp},
number = {4},
pages = {1--6},
title = {{Empirical investigation of agile software development}},
url = {http://dl.acm.org/citation.cfm?doid=2632434.2632447},
volume = {39},
year = {2014}
}
@article{Urli2012,
author = {Urli, Simon and Blay-Fornarino, Mireille and Collet, Philippe and Mosser, S{\'{e}}bastien},
doi = {10.1145/2523599.2523604},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/software product line/Using Composite Feature Models to Support Agile Software Product Line Evolution.pdf:pdf},
isbn = {9781450317986},
journal = {ME '12 6th Int. Work. Model. Evol.},
keywords = {agile,evolution,feature model,software product line},
pages = {21--26},
title = {{Using composite feature models to support agile software product line evolution}},
url = {http://dl.acm.org/citation.cfm?id=2523604{\%}5Cnhttp://dl.acm.org/citation.cfm?doid=2523599.2523604},
year = {2012}
}
@article{Diebold2014,
abstract = {Background Agile software development has been increasingly adopted during the last two decades. Nonetheless, many studies show that using agile methods as defined in the literature does not work very well. Thus, companies adapt these methods by just using parts of them (called agile practices) Objective The goal of the literature study was to understand which agile practices are used in industry under different circumstances, such as different project types, domains, or processes. Method We conducted a mapping study of empirical studies using agile practices in industry. The search strategy identified 1110 studies, of which 24 studies including 68 projects were analyzed. Results The results of this study show that there are practices that are used more often and that the domain and the process also influence the application of different practices. Additionally, the findings confirm the assumption of Ken Schwaber that in most cases, agile methods are not used "completely" but that rather certain practices are adopted. Conclusions Our results can be used by researchers to get a better idea of where and how to follow up research as well as by practitioners to get a better idea of which practices fit their needs and which are used by others. Therefore, our contribution increases the body of knowledge in agile practices usage.},
author = {Diebold, Philipp and Dahlem, Marc},
doi = {10.1145/2601248.2601254},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/out/slr/Agile Practices in Practice - A Mapping Study - .pdf:pdf},
isbn = {978-1-4503-2476-2},
journal = {Proc. 18th Int. Conf. Eval. Assess. Softw. Eng. (EASE '14)},
keywords = {Agile methods,Agile practices,Agile software development,Empirical SE,Industrial usage,Mapping study,Systematic review},
number = {May 2014},
pages = {30:1----30:10},
title = {{Agile Practices in Practice: A Mapping Study}},
url = {http://doi.acm.org/10.1145/2601248.2601254{\%}5Cnhttp://dl.acm.org/citation.cfm?id=2601254},
year = {2014}
}
@article{Steghofer2016,
abstract = {This paper analyses the changes we have made in teaching agile methodologies, practices, and principles in four courses in order to address a specific dilemma: students need to apply agile methods in order to learn them, but when complementing our courses with applied content, we face the problem that students perceive the learning and application of agile methods as less important than delivering a finished product at the end of the course. This causes students to not apply theoretical process knowledge and therefore to not develop necessary skills associated with working with defined processes in the industry. Concretely, we report on our experience with teaching Scrum with Lego, removing formal grading requirements on the delivered product, emphasising process application in post-mortem reports, and organisational changes to support the process during supervision. These changes are analysed in the context of student satisfaction, teacher observations, and achievements of learning outcomes. We also provide an overview of the lessons learnt to help guide the design of courses on agile methodologies.},
author = {Stegh{\"{o}}fer, Jan-Philipp and Knauss, Eric and Al{\'{e}}groth, Emil and Hammouda, Imed and Burden, H{\aa}kan and Ericsson, Morgan},
doi = {10.1145/2889160.2889181},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/methodologies/Teaching Agile- addressing the conflict between project delivery and application of Agile methods.pdf:pdf},
isbn = {9781450342056},
journal = {Proc. 38th Int. Conf. Softw. Eng. Companion - ICSE '16},
keywords = {agile methodogies,all or part of,or,or hard copies of,permission to make digital,project-based learning,scrum,software engineering education,teaching,this work for personal},
pages = {303--312},
title = {{Teaching Agile}},
url = {http://dl.acm.org/citation.cfm?doid=2889160.2889181},
year = {2016}
}
@article{Laukkanen2016,
abstract = {See, stats, and : https : / / www. researchgate . net / publication/ 304283156 Bottom - up Stage - Gate Conference DOI : 10 . 1145 / 2961111 . 2962608 CITATIONS 0 READS 87 5 , including : Some : NaPiRE : Naming Need Eero Aalto , Espoo , Finland 10 SEE Timo . A . Lehtinen Academy 12 SEE Juha Aalto 35 SEE Casper Aalto 98 , 173 SEE All - text , letting . Available : Eero Retrieved : 27 ABSTRACT Context : Continuous delivery (CD) is a development prac - tice for decreasing the time - to - market by keeping software releasable all the time . Adopting CD within a stage - gate managed development process might be useful , although sci - entific evidence of such adoption is not available . In a stage - gate process , new releases pass through stages and gates protect low - quality output from progressing . Large organi - zations with stage - gate processes are often hierarchical and the adoption can be either top - down , driven by the manage - ment , or bottom - up , driven by the development unit . Goal : We investigate the perceived problems of bottom - up CD adoption in a large global software development unit at Nokia Networks . Our goal is to understand how the stage - gate development process used by the unit affects the adop - tion . Method : The overall research approach is a qualitative single case study on one of the several geographical sites of the development unit . We organized two 2 - hour workshops with altogether 15 participants to discover how the stage - gate process affected the adoption . Results : The stage - gate development process caused tight schedules for development and process overhead because of the gate requirements . Moreover , the process required us - ing multiple version control branches for different stages in the process , which increased development complexity and caused additional branch overhead . Together , tight sched - ule , process overhead and branch overhead caused the lack of time to adopt CD . In addition , the use of multiple branches limited the available hardware resources and caused delayed integration . Conclusions : Adopting CD in a development organiza - tion that needs to conform to a stage - gate development pro - cess is challenging . Practitioners should either gain support from the management to relax the required process or reduce their expectations on what can be achieved while conform - ing to the process . To simplify the development process , the use of multiple version control branches could be replaced with feature toggles .},
author = {Laukkanen, Eero and Lehtinen, Timo O.A. and Itkonen, Juha and Paasivaara, Maria and Lassenius, Casper},
doi = {10.1145/2961111.2962608},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/continuous delivery/Bottom-up Adoption of Continuous Delivery in a Stage-Gate Managed Software Organization.pdf:pdf},
isbn = {9781450344272},
issn = {19493789},
journal = {Proc. 10th ACM/IEEE Int. Symp. Empir. Softw. Eng. Meas. - ESEM '16},
keywords = {case study,continuous delivery,stage-gate process},
pages = {1--10},
title = {{Bottom-up Adoption of Continuous Delivery in a Stage-Gate Managed Software Organization}},
url = {http://dl.acm.org/citation.cfm?doid=2961111.2962608},
year = {2016}
}
@article{Mendes2016,
abstract = {Documentation debt is a type of technical debt that describes problems in documentation such as missing, inadequate or incomplete artifacts. Unlike traditional methods, agile methodologies usually employ short iterative cycles and rely on tacit knowledge within a team. In particular, Agile Requirements (AR) (e.g., user stories) tend to reduce the focus on requirements specification activities. This scenario contributes to the occurrence of documentation debt. The goal of this paper is to investigate the impact that this type of debt brings to projects developed by using AR. We address this goal by performing a retrospective study in a real software project that used AR in its development. Our analysis was concentrated on data from 132 maintenance and evolution tasks. Of this total, 65 were related to the presence of documentation debt and were performed within a timeframe of 18 months. The findings indicated an extra maintenance effort of about 47{\%} of the total effort estimated for developing the project and an extra cost of about 48{\%} of the initial cost of the development phase. {\textcopyright} 2016 ACM.},
author = {Mendes, Thiago Souto and {de F. Farias}, M{\'{a}}rio Andr{\'{e}} and Mendon{\c{c}}a, Manoel and Soares, Henrique Frota and Kalinowski, Marcos and Sp{\'{i}}nola, Rodrigo Oliveira},
doi = {10.1145/2851613.2851761},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/documentation/Impacts of Agile Requirements Documentation Debt on Software Projects- A Retrospective Study.pdf:pdf},
isbn = {9781450337397},
journal = {Proc. 31st Annu. ACM Symp. Appl. Comput. - SAC '16},
keywords = {agile,documentation debt,technical debt,user stories},
pages = {1290--1295},
title = {{Impacts of agile requirements documentation debt on software projects}},
url = {http://dl.acm.org/citation.cfm?doid=2851613.2851761},
year = {2016}
}
@article{Ramakrishnan2014,
author = {Ramakrishnan, Subramani and Srinivasaraghavan, Vaijayanthi},
doi = {10.1145/2593702.2593710},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/crowdsourcing/ Delivering software projects using captive university crowd.pdf:pdf},
isbn = {9781450328609},
journal = {Proc. 7th Int. Work. Coop. Hum. Asp. Softw. Eng. - CHASE 2014},
keywords = {crowdsourcing,motivation,university delivery model},
pages = {115--118},
title = {{Delivering software projects using captive university crowd}},
url = {http://dl.acm.org/citation.cfm?doid=2593702.2593710},
year = {2014}
}
@article{Senapathi2013,
abstract = {Context: Agile methodologies (AM) emerged as a popular alternative to formalized methods, and have gained widespread acceptance in both the academic and industrial contexts. While most research has focused on their early stages of adoption and use, there is little evidence that agile methodologies have been effectively used beyond the adoption stage. Objective: The objective of this paper is to gain a comprehensive understanding of the various factors that impact the sustained usage of agile methods. Method: We performed a systematic literature review to identify empirical studies relating to agile usage. We followed the guidelines provided for conducting systematic literature reviews in software engineering [1, 2] using the following distinct stages: 1) protocol development and the search strategy, 2) exclusion process, 3) data extraction, and 4) data synthesis. Results: Our review identified nine critical factors viz., Management Support, Attitude, Motivation, Team Composition, Training, Agile Mindset, Technical Competence and Expertise, Agile Engineering Practices, and Methodology Champion. Conclusions: Our review highlights the significance of nine critical factors that impact sustained usage of AM in organizations. Our findings also indicate that the right balance and combination of various factors with an emphasis on continuous improvement will be crucial for achieving true agile sustainability in organizations. Copyright 2013 ACM.},
author = {Senapathi, Mali and Srinivasan, Ananth},
doi = {10.1145/2460999.2461016},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/out/slr/Sustained Agile Usage- A Systematic Literature Review .pdf:pdf},
isbn = {9781450318488},
journal = {Proc. 17th Int. Conf. Eval. Assess. Softw. Eng. - EASE '13},
keywords = {agile usage,critical factors,sustained agile usage},
pages = {119},
title = {{Sustained agile usage}},
url = {http://dl.acm.org/citation.cfm?doid=2460999.2461016},
year = {2013}
}
@article{Juha-MattiVanhatupa2015,
abstract = {Modern mobile application development is a fast reacting business. One success factor is the ability to be able to add new features rapidly into a product. This can be enabled by a process model designed to support it, and the use of a flexible architecture. Plug-in architecture is one approach to create a flexible architecture, because it enables adding new software components. We have refactored an existing application to a plug-in architecture, and implemented a process model to support rapid adding of features. In our approach new features are implemented as plug-ins, which are added to the application. In this paper we describe the process model, discuss of adding new plug-in using it, and describe our experiences of using the process model.},
author = {{Juha-Matti Vanhatupa}},
doi = {10.1145/2785592.2785614},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/rapid/ Process model for rapid implementation of features using flexible architecture.pdf:pdf},
isbn = {9781450333467},
journal = {ICSSP Conf Abstr.},
keywords = {android,ios,plug-,plug-in architecture,software process model},
pages = {27--31},
title = {{Process model for rapid implementation of features using flexible architecture}},
year = {2015}
}
@article{Murphy2013,
abstract = {Abstract—Background. The pressure to release high-quality, valuable software products at an increasingly faster rate is forcing software development organizations to adapt their development practices. Agile techniques began emerging in the mid-1990s in response to this pressure and to increased volatility of customer requirements and technical change. Theoretically, agile techniques seem to be the silver bullet for responding to these pressures on the software industry. Aims. This paper tracks the changing attitudes to agile adoption and techniques, within Microsoft, in one of the largest longitudinal surveys of its kind (2006-2012). Method. We collected the opinions of 1,969 agile and non-agile practitioners in five surveys over a six-year period. Results. The survey results reveal that despite intense market pressure, the growth of agile adoption at Microsoft is slower than would be expected. Additionally, no individual agile practice exhibited strong growth trends. We also found that while development practices of teams may be similar, some perceive and declare themselves to be following an agile methodology while others do not. Both agile and non-agile practitioners agree on the relative benefits and problem areas of agile techniques. Conclusions. We found no clear trends in practice adoption. Non-agile practitioners are less enamored of the benefits and more strongly in agreement with the problem areas. The ability for agile practices to be used by large-scale teams generally concerned all respondents, which may limit its future adoption.},
author = {Murphy, Brendan and Bird, Christian and Zimmermann, Thomas and Williams, Laurie and Nagappan, Nachiappan and Begel, Andrew},
doi = {10.1109/ESEM.2013.21},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/interviews and surveys/Have Agile Techniques been the Silver Bullet for Software Development at Microsoft? .pdf:pdf},
isbn = {978-0-7695-5056-5},
issn = {19493770},
journal = {Int. Symp. Empir. Softw. Eng. Meas.},
keywords = {Agile,Agile development,Interviews,Survey},
pages = {75--84},
title = {{Have agile techniques been the silver bullet for software development at Microsoft?}},
year = {2013}
}
@article{Al-Ani2013,
abstract = {We present a workshop in which trust in virtual teams is the central theme. Trust is essential for effective and efficient collaborations to take place and is more challenging when people are unable to meet face-to- face. The workshop aims to generate discussions which address three key issues within this general theme: 1) the factors that engender and inhibit trust, 2) the structure of a trust framework, 3) and the requirements for software tools that support the development of trust during virtual collaborations.},
author = {Al-Ani, B and Redmiles, D and de Souza, C. R. B. and Prikladnicki, R. and Marczak, S. and Lanubile, F. and Calefato, F.},
doi = {10.1145/2441955.2442029},
file = {:Users/felipealvesdias/Documents/Revis{\~{a}}o Sistem{\'{a}}tica - Gest{\~{a}}o/ACM{\_}11/out/Trust in Virtual Teams- Theory and Tools.pdf:pdf},
isbn = {9781450313322},
journal = {Proc. 2013 Conf. Comput. Support. Coop. Work companion},
pages = {301--306},
title = {{Trust in virtual teams: theory and tools}},
url = {http://dl.acm.org/citation.cfm?id=2442029},
year = {2013}
}
